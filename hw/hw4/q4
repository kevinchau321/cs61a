def mul_interval_fast(x, y):
    """Return the interval that contains the product of any value in x and any
    value in y, using as few multiplications as possible.

    >>> str_interval(mul_interval_fast(interval(-1, 2), interval(4, 8)))
    '-8 to 16'
    >>> str_interval(mul_interval_fast(interval(-2, -1), interval(4, 8)))
    '-16 to -4'
    >>> str_interval(mul_interval_fast(interval(-1, 3), interval(-4, 8)))
    '-12 to 24'
    >>> str_interval(mul_interval_fast(interval(-1, 2), interval(-8, 4)))
    '-16 to 8'
    """
    if lower_bound(x) > 0 and upper_bound(x) > 0:
        if lower_bound(y) > 0 and upper_bound(y) > 0:
            return interval(lower_bound(x)*lower_bound(y), upper_bound(y)*upper_bound(x))
        if lower_bound(y) < 0 and upper_bound(y) > 0:
            return interval(upper_bound(x)*lower_bound(y), upper_bound(x)*upper_bound(y))
        if lower_bound(y)>0 and lower_bound(y)>0:
            return interval(upper_bound(x)*upper_bound(y),lower_bound(x)*lower_bound(y))
    if lower_bound(x) < 0 and upper_bound(x)<0:
        if lower_bound(y)>0 and upper_bound(y)>0:
            return interval(lower_bound(x)*upper_bound(y),upper_bound(x)*lower_bound(y))
        if lower_bound(y)<0 and upper_bound(y)>0:
            return interval(upper_bound(x)*upperbound(y), upper_bound(x)*lower_bound(y))
        if lower_bound(y)<0 and upperbound(y)<0:
            return interval(lower_bound(x)*upper_bound(y), upper_bound(x)*upper_bound(y))
    if lower_bound(x)<0 and upper_bound(x)>0:
        if lower_bound(y)>0 and upper_bound(y)>0:
            return interval(lower_bound(x)*upper_bound(y), upper_bound(x)*upper_bound(y))
        if lower_bound(y)<0 and upper_bound(y)<0:
            return interval(upper_bound(x)*upper_bound(y), lower_bound(x)*upper_bound(y))
        if lower_bound(y)<0 and upper_bound(y)>0:
            return mul_interval(x,y)